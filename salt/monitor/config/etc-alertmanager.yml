# https://github.com/prometheus/alertmanager#example

receivers:
-   name: "{{ pillar.monitor.alertmanager.receiver.name }}"
    email_configs:
    -   to: "{{ pillar.monitor.alertmanager.receiver.email_to }}"
        from: "{{ pillar.monitor.alertmanager.from }}"
        smarthost: "{{ pillar.monitor.alertmanager.smtp }}"
        auth_username: "{{ pillar.monitor.alertmanager.user }}"
        auth_password: "{{ pillar.monitor.alertmanager.pass }}"
        require_tls: true

# root matcher, matches everything
route:
    # "... a receiver configured so alerts that do not match any of the sub-routes are sent to someone."
    receiver: "{{ pillar.monitor.alertmanager.receiver.name }}"
    # todo: what is 'cluster' here?
    group_by: ['alertname', 'cluster']

    # child route trees.
    #routes:
    #-   match_re:
    #        service: ^(foo1|foo2|baz)$

        # "a sub-route for critical alerts"
        # this could be interesting: warning (nobody), error (techalerts), critical (specific individuals)
        #routes:
        #-   match:
        #        severity: critical
        #    receiver: "critical-response-email"

# Inhibition rules allow to mute a set of alerts given that another alert is
# firing.
# We use this to mute any warning-level notifications if the same alert is
# already critical.
inhibit_rules:
-   source_matchers:
    -   severity="critical"
    target_matchers:
    -   severity="warning"
    # Apply inhibition if the alertname is the same.
    # CAUTION: 
    #   If all label names listed in `equal` are missing 
    #   from both the source and target alerts,
    #   the inhibition rule will apply!
    equal: ['alertname']
