# https://prometheus.io/docs/alerting/latest/configuration/
# https://github.com/prometheus/alertmanager#example

global:
    smtp_from: "{{ pillar.monitor.alertmanager.from }}"
    smtp_smarthost: "{{ pillar.monitor.alertmanager.smtp }}"
    smtp_auth_username: "{{ pillar.monitor.alertmanager.user }}"
    smtp_auth_password: "{{ pillar.monitor.alertmanager.pass }}"
    smtp_require_tls: true

receivers:
    - name: sink

    - name: techalerts
      email_configs:
          - to: "{{ pillar.monitor.alertmanager.receiver.email_to }}"
            send_resolved: true

    - name: experimental
      email_configs:
          - to: "{{ pillar.monitor.alertmanager.experimental_receiver.email_to }}"

# root matcher, matches everything
route:
    # "... a receiver configured so alerts that do not match any of the sub-routes are sent to someone."
    # default policy is to sink all alerts and opt-in to classes of alerts (critical, affects staging/prod, etc).
    receiver: sink

    # 'cluster' here is the AlertManager cluster so alerts from different instances are grouped together.
    # clustering is disabled until it needs to be enabled, otherwise it listens by default on 9094.
    group_by: ["alertname", "cluster"]

    # How long to wait before sending a notification again if it has already
    # been sent successfully for an alert. (Usually ~3h or more).
    repeat_interval: 24h

    routes:
        # experimental alerts go to the experimental alert email receiver.
        - matchers:
            - "type = experimental"
          receiver: experimental

        # always send email for critical alerts in staging/prod envs.
        - matchers:
            - "severity = critical"
            - 'env =~ "staging|continuumtest|continuumtestpreview|prod"'
          receiver: techalerts

        # lsh@2023-09-12: temporary until I can figure out why 'custom_tag_environment' isn't being rewritten to 'env'
        - matchers:
            - "severity = critical"
            - 'custom_tag_environment = "prod"'
          receiver: techalerts

        # lsh@2023-09-06: lets ignore warnings for now and see if the inhibit rules help reduce the noise.
        # only send emails for warnings in the prod env.
        #- matchers:
        #    - "severity = warnings"
        #    - 'env =~ "prod"'
        #  receiver: techalerts

# Inhibition rules allow to mute a set of alerts given that another alert is firing.
# We use this to mute any warning-level notifications if the same alert is already critical.
inhibit_rules:
    - source_matchers:
          - severity="critical"
      target_matchers:
          - severity="warning"
      # Apply inhibition if the alertname is the same.
      # CAUTION:
      #   If all label names listed in `equal` are missing
      #   from both the source and target alerts,
      #   the inhibition rule will apply!
      equal: ["alertname"]

